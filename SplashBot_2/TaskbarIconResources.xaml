<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:SplashBot_2"
    xmlns:tb="http://www.hardcodet.net/taskbar">
    <!--
        The "shared" directive is needed if we reopen the sample window a few times - WPF will otherwise
        reuse the same context menu (which is a resource) again (which will have its DataContext set to the old TaskbarIcon)
    -->
    <ContextMenu
        x:Key="SysTrayMenu"
        x:Shared="false">
        <MenuItem
            Command="{Binding ShowWindowCommand}"
            Header="Show Window" />
        <MenuItem
            Command="{Binding HideWindowCommand}"
            Header="Hide Window" />
        <Separator />
        <MenuItem
            Command="{Binding TestCommand}"
            Header="Test" />
        <Separator />
        <MenuItem
            Command="{Binding ExitApplicationCommand}"
            Header="Exit" />
    </ContextMenu>


    <!--  the application's NotifyIcon - started from App.xaml.cs. Declares its own view model.  -->
    <!--
    <tb:TaskbarIcon
        x:Key="TaskbarIcon"
        ContextMenu="{StaticResource SysTrayMenu}"
        DoubleClickCommand="{Binding ShowWindowCommand}"
        IconSource="/logo.ico"
        ToolTipText="SplashBot">

    -->
    <!--  self-assign a data context (could also be done programmatically)  -->
    <!--
        <tb:TaskbarIcon.DataContext>
            <local:TaskbarIconViewModel />
        </tb:TaskbarIcon.DataContext>
    </tb:TaskbarIcon>-->

    <hc:NotifyIcon
        x:Key="TaskbarIcon"
        ContextMenu="{StaticResource SysTrayMenu}"
        Icon="/logo.ico"
        Text="HandyControl">
        <hc:NotifyIcon.DataContext>
            <local:TaskbarIconViewModel />
        </hc:NotifyIcon.DataContext>
    </hc:NotifyIcon>

</ResourceDictionary>